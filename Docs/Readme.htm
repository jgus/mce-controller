<html>


<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>MCE Controller</title>

<style>
.auto-style2 {
	font-family: "Courier New", Courier, monospace;
}
.auto-style3 {
	border-collapse: separate;
}
.auto-style5 {
	text-align: left;
}
</style>

</head>

	

<body lang=EN-US>

<div class=Section1>

<p><strong>MCE Controller</strong></p>

<p class=auto-style5>Version 1.3.3 - January 9, 2012</p>

<p class=auto-style5>Copyright © 2012 Kindel Systems, LLC</p>

<p class=auto-style5><a
href="http://www.kindel.com/products/mcecontroller">www.kindel.com/products/mcecontroller</a></p>

<p><a
href="mailto:charlie@kindel.com">charlie@kindel.com</a> </p>

<p>&nbsp;</p>

<h1>License</h1>

<p>This version of MCE Controller is distributed as freeware.
Donations of any value appreciated. Make donations using PayPal (<a
href="http://www.paypal.com/">www.paypal.com</a>) to <a
href="mailto:charlie@kindel.com">charlie@kindel.com</a>. </p>

<p>The source code to MCE Controller is available under the BSD
license. The source code project can be found at <a
href="http://sourceforge.net/projects/mcecontroller">http://sourceforge.net/projects/mcecontroller</a>.</p>

<h1>Introduction</h1>

<p>MCE Controller enables the remote control of a Windows PC over the network.&nbsp; 
It runs in the background on a Windows PC listening on the network for commands. 
It then translates those commands into actions such as keystrokes, text input, 
and the starting of programs.&nbsp; For example:</p>
	<ul>
		<li>
		<p>The command &quot;mcestart&quot; will cause the Windows Media Center 
		application to start. This is equivalent to pressing the green button on 
		the Windows remote control.</p>
		</li>
		<li>
		<p>The command &quot;maximize&quot; will cause the current window to be maximized 
		on the display. This is equivalent to choosing the &quot;Maximize&quot; button on 
		the window's window menu.</p>
		</li>
		<li>
		<p>The command &quot;chars:Hello World!&quot; will cause the text &quot;Hello World&quot; to 
		be typed, as though it were typed on the keyboard.</p>
		</li>
		<li>
		<p>The command &quot;restart&quot; will cause the computer to restart. This is 
		equivalent to choosing the restart menu item on the Start menu.</p>
		</li>
	</ul>
	<p>The commands that MCE Controller support is extensible through a 
	configuration file. If it does not natively support a function you wish, you 
	can add new commands easily.</p>

<p>This application was initially developed to enable
integration of a Windows based home theater PC (HTPC) into a Crestron whole-house audio/video system. However, it
is general enough that it can be utilized from any control system that supports
sending text strings to a TCP/IP port. Most control systems, such as Crestron
or AMX, support IR emitting. For many applications, emitting the MCE IR
commands will suffice. However, for some installations the reliability of IR
emitting and other factors may make IR emitting problematic and MCE Controller
offers a robust solution.</p>

<p>MCE Controller can act as either a TCP/IP client or server.
When acting as a client the target host and port can be configured. When acting
as a server the incoming port can be configured.</p>

<p>MCE Controller runs showing only a taskbar icon. By double
clicking on the taskbar a status window is displayed that shows a log of all
activity. You can also right-click on the taskbar icon for a menu.</p>
	<p><strong>WARNING:</strong> MCE Controller is inherently insecure. It 
	effectively will allow anyone with access to your network to remotely 
	control your PC, potentially gaining full access to it. Use at your own risk 
	(or contribute to the open source project and add security to it).</p>

<p>See the <a href="#Revision_History">Revision History</a>
below for details of what's new in this version.</p>

<h1>Installation</h1>

<p>Important Note: MCE Controller requires the
.NET Framework 3.5. Use <a href="http://windowsupdate.microsoft.com/">Windows
Update</a> to ensure you have this installed before running MCE Controller.</p>

<p>Simply run the MCEController
1.x.x Setup.EXE to install. The following files wil be
installed in the directory you choose and a start menu item will be added. You can
un-install MCE Controller either via add/remove programs or by using the Uninstall icon in the MCE
Controller start menu group.</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;Readme.htm</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;
MCEControl.exe</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;
MCEControl.commands </p>

<p>Readme.htm is this file. MCEController.exe is the
program executable and MCEControl.commands
is an XML file that defines the commands MCE Controller will respond to and
what actions it will take.</p>

<p>When MCEControl runs, it defaults to showing itself as only
a taskbar icon. Double clicking on the taskbar icon will show the
configuration/status window.</p>

<p>If you would like it to show it’s configuration/status
window upon startup, uncheck the “Hide
Window at Startup” checkbox in the settings dialog.</p>

<p>Note that all configuration settings are stored in a file
that will be created in the program directory when MCE Controller is first run.
The configuration settings file will be named MCEControl.settings .</p>

<p>You can run multiple instances of MCE Controller. To do so
simply copy the EXE to a 2nd directory along with the .commands
file. Each copy will have its own independent MCEControl.settings file.</p>

<h1>Configuration</h1>

<p>MCE Controller can act as either a TCP/IP client or server
(it can actually operate as both simultaneously, but it’s unlikely it would
ever be useful to do so). By default MCE Controller is configured to act as a
TCP/IP server listening on port 5150.
You can change this behavior using the Settings dialog described below.</p>

<h3>The Client Tab</h3>

<p>The Client tab in the Settings dialog controls MCE
Controller’s TCP/IP client functionality. When acting as a client, MCE
Controller will repeatedly try to connect to the specified port on the
specified host and wait for commands to be sent from the host. MCE Controller
sends nothing to the host.</p>

<ol style='margin-top:0in' start=1 type=1>
 <li>Enable Client. This checkbox enables or disables
     the TCP/IP client functionality. If enabled, the followings settings
     apply: </li>
 <li>Host. This is the IP address or host name of the
     server MCE Controller is to connect to. </li>
 <li>Port. This is the port that MCE Controller will
     connect to. </li>
 <li>Reconnect Wait Time. This is the number of
     milliseconds (default is 20 seconds or 20000 ms) MCE Controller will wait
     before trying to reconnect to the host once a connection has been dropped
     or a connect fails. </li>
</ol>

<h3>The Server Tab</h3>

<p>The Server tab in the Settings dialog controls MCE
Controller’s TCP/IP server functionality.&nbsp; When acting as a server, MCE
Controller will open the specified port and wait for a client to connect. When
a client does connect MCE Controller will wait for incoming commands until the
client closes the connection.</p>

<ol style='margin-top:0in' start=1 type=1>
 <li>Enable Server. This checkbox enables or disables
     the TCP/IP server functionality. If enabled, the followings settings
     apply: </li>
 <li>Port. This is the port that MCE Controller will
     listen on. </li>
 <li>Enable Wakeup. If enabled, MCE Controller will
     attempt to connect to the specified host/port, send the “Wakeup command”
     and disconnect when it first starts. When it shuts down it will send the
     “Closing command”. This functionality is useful when the remote client
     needs to be notified that MCE Controller is ready (for example after the
     MCE PC has rebooted).</li>
</ol>

<h3>Usage Notes</h3>

<ol style='margin-top:0in' start=1 type=1>
 <li>See the <a href="#Included_Commands">Included Commands</a>
     section below and the contents of the MCEControl.commands file for a list of
     all of the commands MCEControl supports by default. </li>
 <li>To test MCE Controller (in server mode) open a telnet
     session to whatever port MCE Controller is configured to open and type
     commands. For example telnet
     localhost 5150 followed by alttab and a carriage return will cause
     an “Alt-Tab” keystroke to be generated on the local system. </li>
 <li>The mcestart
     command will launch Media Center and cause it to be maximized. If you do
     not want this behavior, change MCEControl.commands
     such that the mcestart
     command does not have the embedded nextCommand
     element. </li>
 <li>For MCEContoller to work property the target application (Media Center      ) must be the active window (foreground) on the desktop.&nbsp; You can
     use the mceactivate
     command to cause Media Center to be the foreground app if it’s already
     running. Alternatively you can just use mcestart as it will end up causing the
     same thing to happen (although not as quickly). </li>
 <li>Also, you may find that greenbutton is a better function than mcestart because it
     is equivalent to the green-button. mcestart is a bit different because if
     MCE is already running mcestart
     will not go to the &quot;start&quot; screen of MCE while greenbutton will.
     However, greenbutton
     does not cause the MCE window to be maximized.</li>
</ol>

<h1><a name="Included_Commands">Included Commands</a></h1>

<p>The MCEControl.commands
included with MCE Controller includes the following commands that can control Windows Media Center. See the section below for instructions on how to add, remove, or
change these commands. Note that there are some other commands in MCEControl.commands text
such as &quot;notepad&quot; which starts notepad.exe.
These are there just for illustrative purposes.</p>

<blockquote style='margin-top:5.0pt;margin-bottom:5.0pt'>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width="92%"
 style='width:92.0%;border-collapse:collapse' id=table1>
 <tr>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Command</p>
  </td>
  <td width=563 style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Description</p>
  </td>
 </tr>
 <tr style='height:4.5pt'>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt;height:4.5pt' class="auto-style2">
  {any single character}</td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt;
  height:4.5pt'>
  This is equivalent to a single keypress of a key on the keyboard.&nbsp; For 
  example 'a' will result in the A key being pressed. '1' will result in the '1' 
  key being pressed. There is no difference between sending 'a' and 'A'.&nbsp; 
  Use 'shiftdown:/shiftup:' to simulate the pressing of the shift, control, alt, 
  and windows keys.</td>
 </tr>
 <tr style='height:4.5pt'>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt;height:4.5pt' class="auto-style2">
  shiftdown:[shift|ctrl|alt|lwin|rwin]</td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt;
  height:4.5pt'>
  Simulates a keydown event for one of the modifier keys.</td>
 </tr>
 <tr style='height:4.5pt'>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt;height:4.5pt' class="auto-style2">
  shiftup[shift|ctrl|alt|lwin|rwin]</td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt;
  height:4.5pt'>
  Simulates a keyup event for one of the modifier keys. <br><br>For example, to 
  simulate the typing of 'Test!' send the following commands:<br>&nbsp;&nbsp; 
  shiftdown:shift<br>&nbsp;&nbsp; t<br>&nbsp;&nbsp; shiftup:shift<br>&nbsp;&nbsp; 
  e<br>&nbsp;&nbsp; s<br>&nbsp;&nbsp; t<br>&nbsp;&nbsp; shiftdown:shift<br>&nbsp;&nbsp; 
  1<br>&nbsp;&nbsp; shiftup:shift<br><br>This scheme can be used as an 
  alternative way of sending ctrl-, alt-, and win- keystrokes.&nbsp; For example 
  to simulate ctrl-s:<br><br>&nbsp;&nbsp; shiftdown:ctrl<br>&nbsp;&nbsp; o<br>&nbsp;&nbsp; 
  shiftup:ctrl&nbsp;
  </td>
 </tr>
 <tr style='height:4.5pt'>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt;height:4.5pt' class="auto-style2">
  <p class=auto-style3>chars:*</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt;
  height:4.5pt'>
  <p class=auto-style3>Where * is one or more characters. This is equivalent to 
  typing those characters on the keyboard. E.g. &quot;chars:3&quot; will cause the number 
  3 to be typed as though the user had pressed the 3 key on the keyboard. 
  &quot;chars:Hello&quot; will cause &quot;Hello&quot; to be typed.</p>
  <p class=auto-style3>&nbsp;</p>
  <p class=auto-style3>NOTE: Older versions of MCE Controller suppored a 
  &quot;keys:&quot; command that purported to do the same thing. It never actually worked 
  right and has been replaced with the new &quot;chars:&quot; command. </p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>mcestart</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Launches the eHome shell and makes it the foreground,
  maximized window.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>shutdown</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Causes the machine to shutdown.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>restart</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Causes the machine to reboot.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>standby</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Causes the machine to go into standby mode.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>hibernate</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Causes the machine to go into hibernate mode.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>mcemaximize</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Causes the eHome shell to maximize; ehshell must be
  running.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>mceactivate</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Causes the eHome shell to be the active, foreground
  window; ehshell must be running.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>maximize</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Maximizes the current foreground window.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>alttab</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Performs an &quot;Alt-Tab&quot; task switch; useful for
  testing.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>back</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Equivalent to the Back button on the MCE remote.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>cc</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Equivalent to the closed caption button on the MCE remote.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>ch+</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Channel up.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>ch-</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Channel down.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>close</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Closes ehshell.exe. </p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>delete</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Equivalent to the DEL key.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>down</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Down arrow.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>dvdaudio</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>DVD audio menu.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>dvdmenu</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>DVD menu.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>dvdsubtitle</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>DVD subtitles.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>end</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>END key.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>escape</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>ESC key.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>fwd</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>FWD button &gt;|</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>guide</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Guide button</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>help</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>F1</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>home</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>HOME key.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>insert</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>INS key.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>left</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Left arrow.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>livetv</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>LiveTV button</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>greenbutton</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Equivalent to the green button. ehtray.exe must be running
  for this to work. ehtray.exe will be running after ehshell.exe runs the first
  time after boot, or you can put ehtray.exe in your startup folder.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>moreinfo</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Detail/More-Info button</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>mute</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Mute button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>mymusic</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>My Music button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>mypictures</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>My Pictures button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>mytv</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>My TV button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>myvideos</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>My Videos button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>ok</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>OK button</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>pause</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Pause button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>play</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Play button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>record</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Record button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>recordedtv</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Recorded TV button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>right</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Right arrow.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>rew</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>REW button (rewind)</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>tab</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Tab key</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>stop</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Stop button.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>skipback</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Jump back</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>skipfwd</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Jump forward</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>vol-</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Volume down.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>vol+</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Volume up.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>up</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>Up arrow.</p>
  </td>
 </tr>
 <tr>
  <td valign=top style='padding:.75pt .75pt .75pt .75pt' class="auto-style2">
  <p class=auto-style3>enter</p>
  </td>
  <td width=563 valign=top style='width:422.25pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=auto-style3>The ENTER key.</p>
  </td>
 </tr>
</table>

</blockquote>

<h1>Extending MCE Controller</h1>

<p>MCE Controller has no specific
dependencies on Windows Media Center; the name is simply a legacy from how it 
was originally inteneded to be used. All Windows Media Center specific data is encapsulated in
the MCEControl.commands
file found in the same directory as MCEControl.exe.
Therefore, MCE Controller is actually a generic mechanism for sending input and 
othercommands to a Windows based PC over the network. It already supports sending any message or keystroke
and can launch arbitrary processes. </p>

<p>To utilize this functionality all you have to do is edit the
MCEControl.commands
file to suit your needs.</p>

<p>MCEControl.commands
supports four types of commands: SendInput
, SendMessage
, StartProcess
, Shutdown , and SetForegroundWindow : </p>

<ol style='margin-top:0in' start=1 type=1>
 <li>SendInput commands send
     keystrokes. Any combination of shift, ctrl, alt, and left/right Windows
     keys can be used with any key code. See the winuser.h file in the
     Windows SDK for a definition of all standard VK codes. MCEController uses
     the SendInput ( ) API to send
     keystrokes. Keystrokes go to the foreground window. Use a SetForegroundWindow
     element to set the foreground window to the target app by specifying the
     app’s top-level window class name (e.g. “ehshell ”).<br>
     <br>
     For example, the following causes a Ctrl-P to be send to the foreground
     window, and if that window is Media Center, the My Pictures page to
     appear:<br>
     <br>
     &lt;SendInput
     Cmd=&quot;mypictures&quot; vk=&quot;73&quot; Shift=&quot;false&quot;
     Ctrl=&quot;true&quot; Alt=&quot;false&quot; /&gt;</li>
 <li>SendMessage commands are just
     that. They cause MCE Controller to send a Windows message using the SendMessage ( ) API to the
     foreground window if no class name is specified, or to a particular window
     if that window’s class is specified.<br>
     <br>
     For example, the following is equivalent to sending a WM_SYSCOMMAND
     with the SC_MAXIMIZE
     flag, causing the window with the class name of “ehshell” to be maximized
     (WM_SYSCOMMAND ==
     247 and SC_MAXIMIZE == 61488):<br>
     <br>
     &lt;SendMessage
     Cmd=&quot;mce_maximize&quot; ClassName=&quot;ehshell&quot;
     Msg=&quot;274&quot; wParam=&quot;61488&quot; lParam=&quot;0&quot; /&gt;</li>
 <li>StartProcess commands start
     processes. Process commands support chaining using the nextCommand element.
     The embedded command will be executed after the started application starts
     processing windows’ messages.<br>
     <br>
     For example, the following launches Media Center and maximizes it:<br>
     &lt;StartProcess
     Cmd=&quot;mce_start&quot; File=&quot;C:\windows\ehome\ehshell.exe&quot;&gt;<br>
     &nbsp;&nbsp;&nbsp;
     &lt;nextCommand xsi:type=&quot;SendMessage&quot;
     ClassName=&quot;ehshell&quot; Msg=&quot;274&quot; wParam=&quot;61488&quot;
     lParam=&quot;0&quot; /&gt;<br>
     &lt;/StartProcess&gt;</li>
 <li>The SetForegroundWindow command sets the specified window
     (using the window’s class name) to the foreground.<br>
     <br>
     For example, the following makes Media Center the foreground Window
     (assuming Media Center is running):<br>
     <br>
     &lt;SetForegroundWindow
     Cmd=&quot;mce_activate&quot; ClassName=&quot;ehshell&quot;/&gt; </li>
</ol>

<p>You can also edit MCEControl.commands
to change the text string associated with a particular command. </p>
	<p>Note that MCE Controller supports the &quot;chars:&quot; command in addition to the 
	commands defined in MCEControl.commands.</p>
	<p>Also note that you should not make commands a single character or it will 
	interfere with the ability to simulate individual character key presses.</p>

<h1>Future Version Ideas</h1>

<p>Below is a list of some of the things I’m considering adding
to MCE Controller in the future. If you like these ideas, or have others that
you’d like to see implemented, please send me email or post feedback on the MCE
Controller website.</p>

<ol style='margin-top:0in' start=1 type=1>
 <li>Windows MCE supports a technology that allows external
     applications to be notified of state changes within MCE. For example, what
     music track is currently playing, or what channel on live TV is currently
     active. MCE Controller could be enhanced to support relaying this state
     information over the network to other devices. </li>
 <li>MCE Controller currently has about 20% the functionality
     of Girder. Given the current architectural model of MCE Controller, I
     could easily extend it to support much of what Girder can do such as
     scripting, supporting other input and output mechanisms, etc… I’ve toyed
     with the idea of turning MCE Controller into a Girder alternative for
     general purpose AV device integration. </li>
 <li>Security. Right now there is no security on the port that
     MCE Controller opens when in server mode. If you are concerned about this
     you can use MCE Controller in client mode. I’ve considered adding
     security, however one of the reasons I wrote MCE Controller was that
     Girder’s iserver functionality requires the use of a security mechanism
     which makes it very hard to use from a control system such as Crestron…</li>
</ol>

<h1><a name="Revision_History">Revision History</a></h1>

<ul style='margin-top:0in' type=disc>
 <li>Version 1.0.1 (February 22, 2004) – First publicly
     released version. </li>
 <li>Verison 1.0.2 (March 24, 2004) - New features: </li>
 <ul style='margin-top:0in' type=circle>
  <li>Added support for system shutdown, restart,&nbsp;standby,
      and hibernate (the Shutdown command
      type). </li>
  <li>Renamed a few commands (&quot;mce_start&quot; is now
      &quot;mcestart&quot; for example) to be more consistent.</li>
 </ul>
 <li>Verison 1.0.3 (March 26, 2004) - Added installer. </li>
 <li>Version 1.0.4 (February 26, 2005) - Fixed bug that caused
     MCE Controller to prevent logoffs and shutdowns.</li>
 <li>Version 1.0.5 (April, 2005) – Added support for arbitrary
     # of characters for the “key:” command.</li>
 <li>Verison 1.1.0 (May 11, 2005) – No functional changes.
     Changed the source license to the BSD license and posted on Sourceforge.</li>
	<li>Version 1.3.0 (January 3, 2012) – Added support for &quot;chars:&quot;. Removed 
	support for &quot;keys:&quot;. Added &quot;enter&quot; command. Now builds with VS2010.</li>
  <li>Version 1.3.1 (January 4, 2012) – Fixed bug parsing -1 in the lParam of SendMessageCommands. Commented MCEController.commands. Minor code cleanup.</li>
	<li>Version 1.3.2 (January 4, 2012) – Fixed bug in how .commands and 
	.settings are stored (Win7 broke permissions). </li>
	<li>Version 1.3.3 (January 9, 2012) – Added capability to send individual 
	key presses with shift/ctrl/alt/win modifiers (what keys: originally was 
	supposed to do). </li>
</ul>

<p>&nbsp;</p>

</div>

</body>

</html>
